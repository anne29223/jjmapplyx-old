{
  "name": "Remote Jobs Scraping Workflow",
  "nodes": [
    {
      "parameters": {},
      "id": "start-node",
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "url": "https://remoteok.io/api",
        "options": {
          "timeout": 10000
        }
      },
      "id": "scrape-remoteok",
      "name": "Scrape RemoteOK",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Parse job listings from RemoteOK API\nconst data = $input.first().json;\nconst jobs = [];\n\n// RemoteOK returns JSON array, skip first item (legal notice)\nconst jobListings = Array.isArray(data) ? data.slice(1) : [];\n\nfor (const job of jobListings) {\n  if (job && job.id && job.position) {\n    jobs.push({\n      id: job.id.toString(),\n      title: job.position,\n      company: job.company || 'Unknown',\n      location: job.location || 'Remote',\n      url: `https://remoteok.io/remote-jobs/${job.id}`,\n      description: job.description || '',\n      tags: job.tags || [],\n      salary: job.salary_min && job.salary_max ? `$${job.salary_min} - $${job.salary_max}` : '',\n      source: 'remoteok',\n      dateFound: new Date().toISOString(),\n      datePosted: job.date ? new Date(job.date * 1000).toISOString() : null\n    });\n  }\n}\n\nreturn jobs.map(job => ({ json: job }));"
      },
      "id": "parse-jobs",
      "name": "Parse Remote Jobs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [650, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://tzvzranspvtifnlgrkwi.supabase.co/functions/v1/n8n-webhook",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "body": {
          "action": "job-found",
          "data": "={{$json}}"
        },
        "options": {
          "headers": {
            "Content-Type": "application/json"
          }
        }
      },
      "id": "send-to-jjmapplyx",
      "name": "Send to JJMapplyx",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 300]
    }
  ],
  "connections": {
    "Start": {
      "main": [
        [
          {
            "node": "Scrape RemoteOK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape RemoteOK": {
      "main": [
        [
          {
            "node": "Parse Remote Jobs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Remote Jobs": {
      "main": [
        [
          {
            "node": "Send to JJMapplyx",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}